#cloud-config
hostname: ${app_name}-server
fqdn: ${app_name}.local
package_update: true
package_upgrade: true
timezone: Asia/Jakarta

users:
  - name: deploy
    sudo: ALL=(ALL) NOPASSWD:ALL
    shell: /bin/bash
    groups: [sudo]
    ssh_authorized_keys:
      - ${authorized_ssh_key}
  
  - name: recruiter
    gecos: "Recruiter Access"
    groups: [sudo]
    sudo: ALL=(ALL) ALL
    shell: /bin/bash
    plain_text_passwd: "Recruiter123!"
    lock_passwd: false

ssh_pwauth: true

write_files:
  # --- Nginx site config ---
  - path: /etc/nginx/sites-available/laravel.conf
    permissions: "0644"
    owner: root:root
    content: |
              server {
                    listen 80;
                    listen [::]:80;
                    server_name example.com;
                    root /var/www/html/laravel/public;

                    add_header X-Frame-Options "SAMEORIGIN";
                    add_header X-Content-Type-Options "nosniff";

                    index index.php;

                    charset utf-8;

                    location / {
                        try_files $uri $uri/ /index.php?$query_string;
                    }

                    location = /favicon.ico { access_log off; log_not_found off; }
                    location = /robots.txt  { access_log off; log_not_found off; }

                    error_page 404 /index.php;

                    location ~ ^/index\.php(/|$) {
                        fastcgi_pass unix:/var/run/php/php8.3-fpm.sock;
                        fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                        include fastcgi_params;
                        fastcgi_hide_header X-Powered-By;
                    }

                    location ~ /\.(?!well-known).* {
                        deny all;
                    }
                }

   # --- MySQL initialization SQL ---
  - path: /root/mysql_secure.sql
    permissions: "0600"
    owner: root:root
    content: |
      ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY '${mysql_root_password}';
      FLUSH PRIVILEGES;

  - path: /root/mysql_app.sql
    permissions: "0600"
    owner: root:root
    content: |
      CREATE DATABASE IF NOT EXISTS `${mysql_db_name}` CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;
      CREATE USER IF NOT EXISTS '${mysql_app_user}'@'localhost' IDENTIFIED BY '${mysql_app_password}';
      GRANT ALL PRIVILEGES ON `${mysql_db_name}`.* TO '${mysql_app_user}'@'localhost';
      FLUSH PRIVILEGES;

runcmd:
  - export DEBIAN_FRONTEND=noninteractive
  # --- Make sure SSH is running early ---
  - systemctl enable --now ssh || systemctl enable --now sshd
  - ufw allow OpenSSH || true

  # --- Base packages ---
  - apt-get update
  - apt-get install -y ca-certificates curl git ufw gnupg

  # # --- PHP 8.3 & extensions ---
  - apt-get install -y php8.3 php8.3-fpm php8.3-cli php8.3-common php8.3-mbstring php8.3-xml php8.3-curl php8.3-gd php8.3-intl php8.3-zip php8.3-mysql

  # --- Nginx setup ---
  - apt-get install -y nginx
  - rm -f /etc/nginx/sites-enabled/default
  - ln -s /etc/nginx/sites-available/laravel.conf /etc/nginx/sites-enabled/laravel.conf

  # --- MySQL 8 setup ---
  - echo "mysql-server mysql-server/root_password password ${mysql_root_password}" | debconf-set-selections
  - echo "mysql-server mysql-server/root_password_again password ${mysql_root_password}" | debconf-set-selections
  - apt-get install -y mysql-server
  - systemctl enable --now mysql
  - until mysqladmin ping --silent; do sleep 2; done
  - bash -lc "mysql --protocol=socket -u root < /root/mysql_secure.sql || true"
  - bash -lc "mysql -uroot -p${mysql_root_password} < /root/mysql_app.sql || true"

  # --- Node.js 22.x via NVM + Yarn ---
  # - sudo -i -u deploy bash -lc '
  #     export HOME="/home/deploy";
  #     export NVM_DIR="$HOME/.nvm";
  #     mkdir -p "$NVM_DIR";
  #     curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash;
  #     source "$NVM_DIR/nvm.sh";
  #     nvm install 22;
  #     nvm alias default 22;
  #     npm install -g corepack;
  #     corepack enable;
  #     corepack prepare yarn@stable --activate;
  #     node -v;
  #     npm -v;
  #     yarn -v;
  #   '
  - sudo -i -u deploy bash -lc '
      export HOME="/home/deploy";
      export NVM_DIR="$HOME/.nvm";
      mkdir -p "$NVM_DIR";
      curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.3/install.sh | bash;
      export NVM_DIR="/home/deploy/.nvm";
      [ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh";
      [ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion";
      nvm install 22;
      nvm alias default 22;
      . "$NVM_DIR/nvm.sh";
      npm install -g corepack;
      corepack enable;
      corepack prepare yarn@stable --activate;
      echo "Node version $(node -v)";
      echo "NPM version $(npm -v)";
      echo "Yarn version $(yarn -v)";
    '


  # --- Composer
  - export COMPOSER_HOME="$HOME/.config/composer";
  - curl -sS https://getcomposer.org/installer -o /tmp/composer-setup.php
  - php /tmp/composer-setup.php --install-dir=/usr/local/bin --filename=composer

  # --- Laravel install ---
  - sudo -u deploy bash -lc "composer global require laravel/installer --no-interaction"
  - echo 'export PATH=$HOME/.config/composer/vendor/bin:$PATH' >> /home/deploy/.profile
  - ln -sf /home/deploy/.config/composer/vendor/bin/laravel /usr/local/bin/laravel
  - chown deploy:www-data /var/www/html
  - chmod 775 /var/www/html
  - sudo -u deploy bash -lc "cd /var/www/html && laravel new ${app_name} --no-interaction"

  # Fix ownership and permissions for Nginx
  - chown -R deploy:www-data /var/www/html/${app_name}
  - find /var/www/html/${app_name}/storage -type d -exec chmod 0775 {} \;
  - find /var/www/html/${app_name}/bootstrap/cache -type d -exec chmod 0775 {} \;

  # --- Configure Laravel .env ---
  - sed -i 's/^DB_CONNECTION=.*/DB_CONNECTION=mysql/' /var/www/html/${app_name}/.env
  - sed -i 's/^DB_HOST=.*/DB_HOST=127.0.0.1/' /var/www/html/${app_name}/.env
  - sed -i 's/^DB_PORT=.*/DB_PORT=3306/' /var/www/html/${app_name}/.env
  - sed -i 's/^DB_DATABASE=.*/DB_DATABASE='${mysql_db_name}'/' /var/www/html/${app_name}/.env
  - sed -i 's/^DB_USERNAME=.*/DB_USERNAME='${mysql_app_user}'/' /var/www/html/${app_name}/.env
  - sed -i 's/^DB_PASSWORD=.*/DB_PASSWORD=${mysql_app_password}/' /var/www/html/${app_name}/.env


  # Generate key and run migrations (ignore failures)
  - sudo -i -u deploy bash -lc "cd /var/www/html/${app_name} && php artisan key:generate"
  - sudo -i -u deploy bash -lc "cd /var/www/html/${app_name} && php artisan migrate --force || true"

  # Build frontend assets using yarn (run as deploy)
  - sudo -i -u deploy bash -lc "cd /var/www/html/${app_name} && if command -v yarn >/dev/null 2>&1; then yarn install --silent && yarn build --silent || true; else echo 'yarn not found'; fi"

  # --- Final firewall ---
  - ufw allow OpenSSH
  - ufw allow 'Nginx Full'
  - ufw --force enable

  # --- Restart critical services ---
  - systemctl enable --now php8.3-fpm
  - systemctl enable --now nginx
  - systemctl enable --now mysql
  - systemctl enable --now ssh || systemctl enable --now sshd

final_message: |
  âœ… Cloud-init finished successfully!
  - SSH is ready on port 22
  - Laravel should be available on http://<your-public-ip>/
